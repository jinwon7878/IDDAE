{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/TimeSlotList.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TimeSlotList = ({\n  runningTime,\n  selectedDay,\n  meetingDateList\n}) => {\n  _s();\n  const [timeList, setTimeList] = useState([]);\n  const date = selectedDay;\n  const renderTimeList = day => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      if (meetingDateList.includes(d)) {\n        SlotList.push({\n          time: d,\n          isPossible: true\n        });\n      } else {\n        SlotList.push({\n          time: d,\n          isPossible: false\n        });\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"SelectTime\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TimeSlotList, \"bJ21AKFG9fJoC2axYXUsCrhugqQ=\");\n_c = TimeSlotList;\nexport default TimeSlotList;\nvar _c;\n$RefreshReg$(_c, \"TimeSlotList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TimeSlotList","runningTime","selectedDay","meetingDateList","_s","timeList","setTimeList","useState","date","renderTimeList","day","numSlots","SlotList","i","d","Date","setMinutes","getMinutes","includes","push","time","isPossible","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/TimeSlotList.jsx"],"sourcesContent":["import React from 'react'\n\nconst TimeSlotList = ({ runningTime, selectedDay, meetingDateList }) => {\n  const [timeList, setTimeList] = useState([]);\n  const date = selectedDay;\n\n  const renderTimeList = (day) => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      if (meetingDateList.includes(d)) {\n        SlotList.push({time:d, isPossible: true});\n      } else {\n        SlotList.push({time:d, isPossible: false});\n      }\n    }\n\n  }\n\n\n\n  return (\n    <div>SelectTime</div>\n  )\n}\n\nexport default TimeSlotList;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC,WAAW;EAAEC;AAAgB,CAAC,KAAK;EAAAC,EAAA;EACtE,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMC,IAAI,GAAGN,WAAW;EAExB,MAAMO,cAAc,GAAIC,GAAG,IAAK;IAC9B;IACA,MAAMC,QAAQ,GAAG,GAAG,GAAGV,WAAW;IAClC,IAAIW,QAAQ,GAAG,EAAE;IACjB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGF,QAAQ,EAAEE,CAAC,EAAE,EAAE;MACjC,IAAIC,CAAC,GAAG,IAAIC,IAAI,CAACL,GAAG,CAAC;MACrBI,CAAC,CAACE,UAAU,CAACF,CAAC,CAACG,UAAU,CAAC,CAAC,GAAG,GAAG,GAAGhB,WAAW,GAAGY,CAAC,CAAC;MACpD,IAAIV,eAAe,CAACe,QAAQ,CAACJ,CAAC,CAAC,EAAE;QAC/BF,QAAQ,CAACO,IAAI,CAAC;UAACC,IAAI,EAACN,CAAC;UAAEO,UAAU,EAAE;QAAI,CAAC,CAAC;MAC3C,CAAC,MAAM;QACLT,QAAQ,CAACO,IAAI,CAAC;UAACC,IAAI,EAACN,CAAC;UAAEO,UAAU,EAAE;QAAK,CAAC,CAAC;MAC5C;IACF;EAEF,CAAC;EAID,oBACEtB,OAAA;IAAAuB,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEzB,CAAC;AAAAtB,EAAA,CAzBKJ,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA2BlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}