{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/TimeSlotList.jsx\";\nimport React from \"react\";\nimport TimeSlot from \"./TimeSlot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimeSlotList = ({\n  timeList,\n  meetingDateList,\n  setMeetingDateList\n}) => {\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  };\n  const handleClickSlot = e => {\n    const date = e.target.value; // new Date(e.target.time)\n    console.log(date);\n    const isPos = JSON.parse(e.target.dataset.ispossible);\n    if (isPos) {\n      setMeetingDateList(prev => {\n        const meetList = [...prev];\n        for (let i = 0; i < meetList.length; i++) {\n          if (isSameDateAndTime(new Date(meetList[i]), date)) {\n            const newMeetList = meetList.splice(i, 1);\n            return newMeetList;\n          }\n        }\n      });\n    } else {\n      setMeetingDateList(prev => {\n        console.log('prev: ', prev);\n        return [date, ...prev].sort();\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: timeList.map((slot, index) => /*#__PURE__*/_jsxDEV(TimeSlot, {\n      onClick: handleClickSlot,\n      time: slot.time,\n      isPossible: slot.isPossible\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 39\n    }, this))\n  }, void 0, false);\n};\n_c = TimeSlotList;\nexport default TimeSlotList;\nvar _c;\n$RefreshReg$(_c, \"TimeSlotList\");","map":{"version":3,"names":["React","TimeSlot","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeSlotList","timeList","meetingDateList","setMeetingDateList","isSameDateAndTime","date1","date2","getTime","handleClickSlot","e","date","target","value","console","log","isPos","JSON","parse","dataset","ispossible","prev","meetList","i","length","Date","newMeetList","splice","sort","children","map","slot","index","onClick","time","isPossible","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/TimeSlotList.jsx"],"sourcesContent":["import React from \"react\";\nimport TimeSlot from \"./TimeSlot\";\n\nconst TimeSlotList = ({ timeList, meetingDateList, setMeetingDateList }) => {\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  }\n  const handleClickSlot = (e) => {\n    const date = e.target.value; // new Date(e.target.time)\n    console.log(date);\n    const isPos = JSON.parse(e.target.dataset.ispossible);\n    if (isPos) {\n      setMeetingDateList((prev) => {\n        const meetList = [...prev]\n        for(let i = 0; i < meetList.length; i++) {\n          if(isSameDateAndTime(new Date(meetList[i]), date)) {\n            const newMeetList = meetList.splice(i, 1);\n            return newMeetList;\n          }\n        }\n      });\n    } else {setMeetingDateList((prev) => {\n      console.log('prev: ', prev);\n      return [date, ...prev].sort()\n    })}\n  };\n\n  return (\n    <>\n      {timeList.map((slot, index) => (<TimeSlot onClick={handleClickSlot} key={index} time={slot.time} isPossible={slot.isPossible} />))}\n    </>\n  );\n};\n\nexport default TimeSlotList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAmB,CAAC,KAAK;EAC1E,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,OAAOD,KAAK,CAACE,OAAO,CAAC,CAAC,KAAKD,KAAK,CAACC,OAAO,CAAC,CAAC;EAC5C,CAAC;EACD,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC;IAC7BC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;IACjB,MAAMK,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACR,CAAC,CAACE,MAAM,CAACO,OAAO,CAACC,UAAU,CAAC;IACrD,IAAIJ,KAAK,EAAE;MACTZ,kBAAkB,CAAEiB,IAAI,IAAK;QAC3B,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAAC;QAC1B,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UACvC,IAAGlB,iBAAiB,CAAC,IAAIoB,IAAI,CAACH,QAAQ,CAACC,CAAC,CAAC,CAAC,EAAEZ,IAAI,CAAC,EAAE;YACjD,MAAMe,WAAW,GAAGJ,QAAQ,CAACK,MAAM,CAACJ,CAAC,EAAE,CAAC,CAAC;YACzC,OAAOG,WAAW;UACpB;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MAACtB,kBAAkB,CAAEiB,IAAI,IAAK;QACnCP,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEM,IAAI,CAAC;QAC3B,OAAO,CAACV,IAAI,EAAE,GAAGU,IAAI,CAAC,CAACO,IAAI,CAAC,CAAC;MAC/B,CAAC,CAAC;IAAA;EACJ,CAAC;EAED,oBACE9B,OAAA,CAAAE,SAAA;IAAA6B,QAAA,EACG3B,QAAQ,CAAC4B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAMlC,OAAA,CAACF,QAAQ;MAACqC,OAAO,EAAExB,eAAgB;MAAayB,IAAI,EAAEH,IAAI,CAACG,IAAK;MAACC,UAAU,EAAEJ,IAAI,CAACI;IAAW,GAApDH,KAAK;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiD,CAAE;EAAC,gBAClI,CAAC;AAEP,CAAC;AAACC,EAAA,GA7BIvC,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}