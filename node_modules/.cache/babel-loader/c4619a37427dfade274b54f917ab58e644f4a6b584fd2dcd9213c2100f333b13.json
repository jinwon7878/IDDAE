{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/TimeSlotList.jsx\";\nimport React from \"react\";\nimport TimeSlot from \"./TimeSlot\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledSlotList = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  height: 600px;\n  flex-wrap: wrap;\n`;\n_c = StyledSlotList;\nconst TimeSlotList = ({\n  timeList,\n  meetingDateList,\n  setMeetingDateList\n}) => {\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  };\n  const handleClickSlot = e => {\n    const date = new Date(e.currentTarget.value); // string => Date object\n    const isPos = JSON.parse(e.currentTarget.dataset.ispossible);\n    if (isPos) {\n      setMeetingDateList(prev => {\n        const meetList = [...prev];\n        for (let i = 0; i < meetList.length; i++) {\n          if (isSameDateAndTime(new Date(meetList[i]), date)) {\n            meetList.splice(i, 1);\n            return meetList;\n          }\n        }\n      });\n    } else {\n      setMeetingDateList(prev => {\n        return [date, ...prev].sort();\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(StyledSlotList, {\n    children: timeList.map((slot, index) => /*#__PURE__*/_jsxDEV(TimeSlot, {\n      onClick: handleClickSlot,\n      time: slot.time,\n      isPossibleTime: slot.isPossible\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 39\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TimeSlotList;\nexport default TimeSlotList;\nvar _c, _c2;\n$RefreshReg$(_c, \"StyledSlotList\");\n$RefreshReg$(_c2, \"TimeSlotList\");","map":{"version":3,"names":["React","TimeSlot","styled","jsxDEV","_jsxDEV","StyledSlotList","div","_c","TimeSlotList","timeList","meetingDateList","setMeetingDateList","isSameDateAndTime","date1","date2","getTime","handleClickSlot","e","date","Date","currentTarget","value","isPos","JSON","parse","dataset","ispossible","prev","meetList","i","length","splice","sort","children","map","slot","index","onClick","time","isPossibleTime","isPossible","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/TimeSlotList.jsx"],"sourcesContent":["import React from \"react\";\nimport TimeSlot from \"./TimeSlot\";\nimport styled from \"styled-components\";\n\nconst StyledSlotList = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 90%;\n  height: 600px;\n  flex-wrap: wrap;\n`\n\nconst TimeSlotList = ({ timeList, meetingDateList, setMeetingDateList }) => {\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  }\n  const handleClickSlot = (e) => {\n    const date = new Date(e.currentTarget.value); // string => Date object\n    const isPos = JSON.parse(e.currentTarget.dataset.ispossible);\n    if (isPos) {\n      setMeetingDateList((prev) => {\n        const meetList = [...prev]\n        for(let i = 0; i < meetList.length; i++) {\n          if(isSameDateAndTime(new Date(meetList[i]), date)) {\n            meetList.splice(i, 1);\n            return meetList;\n          }\n        }\n      });\n    } else {setMeetingDateList((prev) => {\n      return [date, ...prev].sort()\n    })}\n  };\n\n  return (\n    <StyledSlotList>\n      {timeList.map((slot, index) => (<TimeSlot onClick={handleClickSlot} key={index} time={slot.time} isPossibleTime={slot.isPossible} />))}\n    </StyledSlotList>\n  );\n};\n\nexport default TimeSlotList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,MAAM,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,cAAc,GAAGH,MAAM,CAACI,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA,CAAC;AAAAC,EAAA,GANKF,cAAc;AAQpB,MAAMG,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAmB,CAAC,KAAK;EAC1E,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,OAAOD,KAAK,CAACE,OAAO,CAAC,CAAC,KAAKD,KAAK,CAACC,OAAO,CAAC,CAAC;EAC5C,CAAC;EACD,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC7B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,CAAC,CAACG,aAAa,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9C,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACP,CAAC,CAACG,aAAa,CAACK,OAAO,CAACC,UAAU,CAAC;IAC5D,IAAIJ,KAAK,EAAE;MACTX,kBAAkB,CAAEgB,IAAI,IAAK;QAC3B,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAAC;QAC1B,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UACvC,IAAGjB,iBAAiB,CAAC,IAAIO,IAAI,CAACS,QAAQ,CAACC,CAAC,CAAC,CAAC,EAAEX,IAAI,CAAC,EAAE;YACjDU,QAAQ,CAACG,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;YACrB,OAAOD,QAAQ;UACjB;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MAACjB,kBAAkB,CAAEgB,IAAI,IAAK;QACnC,OAAO,CAACT,IAAI,EAAE,GAAGS,IAAI,CAAC,CAACK,IAAI,CAAC,CAAC;MAC/B,CAAC,CAAC;IAAA;EACJ,CAAC;EAED,oBACE5B,OAAA,CAACC,cAAc;IAAA4B,QAAA,EACZxB,QAAQ,CAACyB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAMhC,OAAA,CAACH,QAAQ;MAACoC,OAAO,EAAErB,eAAgB;MAAasB,IAAI,EAAEH,IAAI,CAACG,IAAK;MAACC,cAAc,EAAEJ,IAAI,CAACK;IAAW,GAAxDJ,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqD,CAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxH,CAAC;AAErB,CAAC;AAACC,GAAA,GA3BIrC,YAAY;AA6BlB,eAAeA,YAAY;AAAC,IAAAD,EAAA,EAAAsC,GAAA;AAAAC,YAAA,CAAAvC,EAAA;AAAAuC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}