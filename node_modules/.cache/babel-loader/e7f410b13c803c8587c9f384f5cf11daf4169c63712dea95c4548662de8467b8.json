{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/routes/CalendarForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport Calendar from 'react-calendar';\n// import TimeSlotList from \"../components/TimeSlotList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarForm = () => {\n  _s();\n  const location = useLocation();\n  const state = location.state; // state = {meet_name: ~ , ...}\n\n  const [selectedDay, setSelectedDay] = useState(new Date()); // 현재 클릭한 날짜 (Date 객체)\n  const [meetingDateList, setMeetingDateList] = useState([]); // 현재까지 저장된 미팅 가능 날짜 객체들\n  const [timeList, setTimeList] = useState([]); // TimeSlotList => {index, time, isPossible}의 List\n\n  const handleClickDay = day => {\n    setSelectedDay(day);\n  };\n  const renderTimeList = day => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const runningTime = state.runningTime;\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      if (meetingDateList.includes(d)) {\n        SlotList.push({\n          index: i,\n          time: d,\n          isPossible: true\n        });\n      } else {\n        SlotList.push({\n          index: i,\n          time: d,\n          isPossible: false\n        });\n      }\n    }\n    setTimeList(SlotList);\n  };\n  useLayoutEffect(() => {\n    renderTimeList(selectedDay);\n  }, [selectedDay]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: \"\\uBBF8\\uD305 \\uAC00\\uB2A5 \\uB0A0\\uC9DC \\uC120\\uD0DD\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBBF8\\uD305 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBBF8\\uD305 \\uC774\\uB984: \", state.meet_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCC38\\uC5EC \\uC778\\uC6D0: \", state.numJoiner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBBF8\\uD305 \\uC2DC\\uAC04: \", state.runningTime, \"\\uBD84\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 3\n  }, this);\n};\n_s(CalendarForm, \"Bz02JbV4uT8W3cfe77BTED8R5Qo=\", false, function () {\n  return [useLocation];\n});\n_c = CalendarForm;\nexport default CalendarForm;\nvar _c;\n$RefreshReg$(_c, \"CalendarForm\");","map":{"version":3,"names":["React","useState","useEffect","useLayoutEffect","useLocation","Container","Calendar","jsxDEV","_jsxDEV","CalendarForm","_s","location","state","selectedDay","setSelectedDay","Date","meetingDateList","setMeetingDateList","timeList","setTimeList","handleClickDay","day","renderTimeList","runningTime","numSlots","SlotList","i","d","setMinutes","getMinutes","includes","push","index","time","isPossible","title","children","fileName","_jsxFileName","lineNumber","columnNumber","meet_name","numJoiner","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/routes/CalendarForm.jsx"],"sourcesContent":["import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport Calendar from 'react-calendar';\n// import TimeSlotList from \"../components/TimeSlotList\";\n\nconst CalendarForm = () => {\n  const location = useLocation();\n  const state = location.state; // state = {meet_name: ~ , ...}\n\n  const [selectedDay, setSelectedDay] = useState(new Date()); // 현재 클릭한 날짜 (Date 객체)\n  const [meetingDateList, setMeetingDateList] = useState([]); // 현재까지 저장된 미팅 가능 날짜 객체들\n  const [timeList, setTimeList] = useState([]); // TimeSlotList => {index, time, isPossible}의 List\n\n  const handleClickDay = (day) => {\n    setSelectedDay(day);\n  }\n\n  const renderTimeList = (day) => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const runningTime = state.runningTime;\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      if (meetingDateList.includes(d)) {\n        SlotList.push({index:i, time:d, isPossible: true});\n      } else {\n        SlotList.push({index:i, time:d, isPossible: false});\n      }\n    }\n    setTimeList(SlotList);\n  }\n\n  useLayoutEffect(()=>{\n    renderTimeList(selectedDay);\n  }, [selectedDay])\n\n  return (\n  <Container title='미팅 가능 날짜 선택'>\n    <div>\n      <p>미팅 정보</p>\n      <div>\n        <p>미팅 이름: {state.meet_name}</p>\n        <p>참여 인원: {state.numJoiner}</p>\n        <p>미팅 시간: {state.runningTime}분</p>\n      </div>\n    </div>\n    {/* <Calendar onChange={handleClickDay}/> */}\n    {/* <TimeSlotList timeList={timeList} setMeetingDateList={setMeetingDateList} /> */}\n  </Container>\n  );\n};\n\nexport default CalendarForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}