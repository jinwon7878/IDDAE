{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClickedSlotList = ({\n  meetingDateList\n}) => {\n  const renderClickedList = meetingList => {\n    const meetList = [...meetingList];\n    console.log(meetList);\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let datesPerMonth = [];\n    let prevMonth = -1;\n    for (let i = 0; i < meetList.length; i++) {\n      const date = meetList[i];\n      let month = date.getMonth();\n      if (month != prevMonth) {\n        returnList.push({\n          prevMonth: datesPerMonth\n        });\n        datesPerMonth = [];\n        prevMonth = month;\n      } else {\n        datesPerMonth.push(date);\n      }\n      if (i === meetList.length - 1) {\n        returnList.push({\n          prevMonth: datesPerMonth\n        });\n      }\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    console.log(returnList);\n    return returnList;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderClickedList(meetingDateList).map(monthAndDates => {\n      for (const [m, ds] of Object.entries(monthAndDates)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: m.toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ds.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: d.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }, this);\n      }\n    })\n  }, void 0, false);\n};\n_c = ClickedSlotList;\nexport default ClickedSlotList;\nvar _c;\n$RefreshReg$(_c, \"ClickedSlotList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ClickedSlotList","meetingDateList","renderClickedList","meetingList","meetList","console","log","returnList","datesPerMonth","prevMonth","i","length","date","month","getMonth","push","splice","children","map","monthAndDates","m","ds","Object","entries","toString","fileName","_jsxFileName","lineNumber","columnNumber","d","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx"],"sourcesContent":["import React from \"react\";\n\nconst ClickedSlotList = ({ meetingDateList }) => {\n  const renderClickedList = (meetingList) => {\n    const meetList = [...meetingList];\n    console.log(meetList);\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let datesPerMonth = [];\n    let prevMonth = -1;\n    for (let i = 0; i < meetList.length; i++) {\n      const date = meetList[i];\n      let month = date.getMonth();\n      if (month != prevMonth) {\n        returnList.push({ prevMonth: datesPerMonth });\n        datesPerMonth = [];\n        prevMonth = month;\n      } else {\n        datesPerMonth.push(date);\n      }\n      if (i === meetList.length - 1) {\n        returnList.push({ prevMonth: datesPerMonth });\n      }\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    console.log(returnList);\n    return returnList;\n  };\n\n  return <>{renderClickedList(meetingDateList).map((monthAndDates)=>{\n        for (const [m, ds] of Object.entries(monthAndDates)) {\n            return (\n              <div>\n                <p>{m.toString()}</p>\n                <div>\n                  {ds.map((d) => (\n                    <p>{d.toString()}</p>\n                  ))}\n                </div>\n              </div>\n            );\n            }\n        })}</>;\n};\n\nexport default ClickedSlotList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAC/C,MAAMC,iBAAiB,GAAIC,WAAW,IAAK;IACzC,MAAMC,QAAQ,GAAG,CAAC,GAAGD,WAAW,CAAC;IACjCE,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;IACrB,IAAIG,UAAU,GAAG,EAAE,CAAC,CAAC;IACrB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGN,QAAQ,CAACO,MAAM,EAAED,CAAC,EAAE,EAAE;MACxC,MAAME,IAAI,GAAGR,QAAQ,CAACM,CAAC,CAAC;MACxB,IAAIG,KAAK,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC;MAC3B,IAAID,KAAK,IAAIJ,SAAS,EAAE;QACtBF,UAAU,CAACQ,IAAI,CAAC;UAAEN,SAAS,EAAED;QAAc,CAAC,CAAC;QAC7CA,aAAa,GAAG,EAAE;QAClBC,SAAS,GAAGI,KAAK;MACnB,CAAC,MAAM;QACLL,aAAa,CAACO,IAAI,CAACH,IAAI,CAAC;MAC1B;MACA,IAAIF,CAAC,KAAKN,QAAQ,CAACO,MAAM,GAAG,CAAC,EAAE;QAC7BJ,UAAU,CAACQ,IAAI,CAAC;UAAEN,SAAS,EAAED;QAAc,CAAC,CAAC;MAC/C;IACF;IACAD,UAAU,CAACS,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzBX,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IACvB,OAAOA,UAAU;EACnB,CAAC;EAED,oBAAOV,OAAA,CAAAE,SAAA;IAAAkB,QAAA,EAAGf,iBAAiB,CAACD,eAAe,CAAC,CAACiB,GAAG,CAAEC,aAAa,IAAG;MAC5D,KAAK,MAAM,CAACC,CAAC,EAAEC,EAAE,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,aAAa,CAAC,EAAE;QACjD,oBACEtB,OAAA;UAAAoB,QAAA,gBACEpB,OAAA;YAAAoB,QAAA,EAAIG,CAAC,CAACI,QAAQ,CAAC;UAAC;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACrB/B,OAAA;YAAAoB,QAAA,EACGI,EAAE,CAACH,GAAG,CAAEW,CAAC,iBACRhC,OAAA;cAAAoB,QAAA,EAAIY,CAAC,CAACL,QAAQ,CAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CACrB;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAER;IACJ,CAAC;EAAC,gBAAG,CAAC;AACd,CAAC;AAACE,EAAA,GAxCI9B,eAAe;AA0CrB,eAAeA,eAAe;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}