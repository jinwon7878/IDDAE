{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/routes/CalendarForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport Calendar from 'react-calendar';\nimport TimeSlotList from \"../components/TimeSlotList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarForm = () => {\n  _s();\n  const location = useLocation();\n  const state = location.state; // state = {meet_name: ~ , ...}\n\n  const [selectedDay, setSelectedDay] = useState(new Date()); // 현재 클릭한 날짜 (Date 객체)\n  const [meetingDateList, setMeetingDateList] = useState([]); // 현재까지 저장된 미팅 가능 날짜 객체들\n\n  const handleClickDay = day => {\n    setSelectedDay(day);\n  };\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  };\n  const renderTimeList = (day, meetList) => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const runningTime = state.runningTime;\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    console.log('meetList in Rendering: ', meetList);\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      let isContain = meetList.some(meetDate => {\n        console.log('meetDate: ', typeof JSON.parse(meetDate)); // string => object로 변환과정 필요\n        console.log('d: ', typeof d); // object\n        // isSameDateAndTime(meetDate, d)\n      });\n\n      if (isContain) {\n        SlotList.push({\n          time: d,\n          isPossible: true\n        });\n      } else {\n        SlotList.push({\n          time: d,\n          isPossible: false\n        });\n      }\n    }\n    return SlotList;\n  };\n  console.log('meetingDateList in making timeList: ', meetingDateList);\n  const timeList = useMemo(() => renderTimeList(selectedDay, meetingDateList), [selectedDay, meetingDateList]);\n  console.log('timeList in Rendering: ', timeList);\n  // TimeSlotList => {time, isPossible}의 List\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: \"\\uBBF8\\uD305 \\uAC00\\uB2A5 \\uB0A0\\uC9DC \\uC120\\uD0DD\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBBF8\\uD305 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBBF8\\uD305 \\uC774\\uB984: \", state.meet_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCC38\\uC5EC \\uC778\\uC6D0: \", state.numJoiner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBBF8\\uD305 \\uC2DC\\uAC04: \", state.runningTime, \"\\uBD84\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n      onChange: handleClickDay\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TimeSlotList, {\n      timeList: timeList,\n      meetingDateList: meetingDateList,\n      setMeetingDateList: setMeetingDateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n_s(CalendarForm, \"ffu5GhvvdxEf59v/BZ4A2NfcADA=\", false, function () {\n  return [useLocation];\n});\n_c = CalendarForm;\nexport default CalendarForm;\nvar _c;\n$RefreshReg$(_c, \"CalendarForm\");","map":{"version":3,"names":["React","useState","useMemo","useLocation","Container","Calendar","TimeSlotList","jsxDEV","_jsxDEV","CalendarForm","_s","location","state","selectedDay","setSelectedDay","Date","meetingDateList","setMeetingDateList","handleClickDay","day","isSameDateAndTime","date1","date2","getTime","renderTimeList","meetList","runningTime","numSlots","SlotList","console","log","i","d","setMinutes","getMinutes","isContain","some","meetDate","JSON","parse","push","time","isPossible","timeList","title","children","fileName","_jsxFileName","lineNumber","columnNumber","meet_name","numJoiner","onChange","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/routes/CalendarForm.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport Calendar from 'react-calendar';\nimport TimeSlotList from \"../components/TimeSlotList\";\n\nconst CalendarForm = () => {\n  const location = useLocation();\n  const state = location.state; // state = {meet_name: ~ , ...}\n\n  const [selectedDay, setSelectedDay] = useState(new Date()); // 현재 클릭한 날짜 (Date 객체)\n  const [meetingDateList, setMeetingDateList] = useState([]); // 현재까지 저장된 미팅 가능 날짜 객체들\n\n  const handleClickDay = (day) => {\n    setSelectedDay(day);\n  }\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  }\n  const renderTimeList = (day, meetList) => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const runningTime = state.runningTime;\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    console.log('meetList in Rendering: ', meetList)\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      let isContain = meetList.some(meetDate => {\n        console.log('meetDate: ', typeof(JSON.parse(meetDate))); // string => object로 변환과정 필요\n        console.log('d: ', typeof(d)); // object\n        // isSameDateAndTime(meetDate, d)\n      });\n      if (isContain) {\n        SlotList.push({time:d, isPossible: true});\n      } else {\n        SlotList.push({time:d, isPossible: false});\n      }\n    }\n    return SlotList;\n  }\n\n  console.log('meetingDateList in making timeList: ', meetingDateList);\n  const timeList = useMemo(()=>renderTimeList(selectedDay, meetingDateList), [selectedDay, meetingDateList]);\n  console.log('timeList in Rendering: ', timeList);\n  // TimeSlotList => {time, isPossible}의 List\n\n  return (\n  <Container title='미팅 가능 날짜 선택'>\n    <div>\n      <p>미팅 정보</p>\n      <div>\n        <p>미팅 이름: {state.meet_name}</p>\n        <p>참여 인원: {state.numJoiner}</p>\n        <p>미팅 시간: {state.runningTime}분</p>\n      </div>\n    </div>\n    <Calendar onChange={handleClickDay}/>\n    <TimeSlotList timeList={timeList} meetingDateList={meetingDateList} setMeetingDateList={setMeetingDateList} />\n  </Container>\n  );\n};\n\nexport default CalendarForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}