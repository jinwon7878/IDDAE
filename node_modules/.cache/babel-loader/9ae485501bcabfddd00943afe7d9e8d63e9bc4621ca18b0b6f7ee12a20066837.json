{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/routes/CalendarForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Container from \"../components/Container\";\nimport Calendar from 'react-calendar';\nimport TimeSlotList from \"../components/TimeSlotList\";\nimport ClickedSlotList from \"../components/ClickedSlotList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MeetingInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 1;\n  height: 120px;\n`;\n_c = MeetingInfo;\nconst RowContainer = styled.div`\n  display: flex;\n  height: 300px;\n`;\n_c2 = RowContainer;\nconst CalendarForm = () => {\n  _s();\n  const location = useLocation();\n  const state = location.state; // state = {meet_name: ~ , ...}\n\n  const [selectedDay, setSelectedDay] = useState(new Date()); // 현재 클릭한 날짜 (Date 객체)\n  const [meetingDateList, setMeetingDateList] = useState([]); // 현재까지 저장된 미팅 가능 날짜 객체들\n\n  const handleClickDay = day => {\n    setSelectedDay(day);\n  };\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  };\n  const renderTimeList = (day, meetList) => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const runningTime = state.runningTime;\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      let isContain = meetList.some(meetDate => isSameDateAndTime(new Date(meetDate), d));\n      if (isContain) {\n        SlotList.push({\n          time: d,\n          isPossible: true\n        });\n      } else {\n        SlotList.push({\n          time: d,\n          isPossible: false\n        });\n      }\n    }\n    return SlotList;\n  };\n  const timeList = useMemo(() => renderTimeList(selectedDay, meetingDateList), [selectedDay, meetingDateList]);\n  // timeList => {time, isPossible}의 List\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: \"\\uBBF8\\uD305 \\uAC00\\uB2A5 \\uB0A0\\uC9DC \\uC120\\uD0DD\",\n    children: [/*#__PURE__*/_jsxDEV(MeetingInfo, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBBF8\\uD305 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBBF8\\uD305 \\uC774\\uB984: \", state.meet_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uCC38\\uC5EC \\uC778\\uC6D0: \", state.numJoiner]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uBBF8\\uD305 \\uC2DC\\uAC04: \", state.runningTime, \"\\uBD84\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(RowContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: handleClickDay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ClickedSlotList, {\n        meetingDateList: meetingDateList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAC00\\uB2A5\\uD55C \\uC2DC\\uAC04\\uC744 \\uC120\\uD0DD\\uD574\\uC8FC\\uC138\\uC694!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(TimeSlotList, {\n      timeList: timeList,\n      meetingDateList: meetingDateList,\n      setMeetingDateList: setMeetingDateList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 3\n  }, this);\n};\n_s(CalendarForm, \"ffu5GhvvdxEf59v/BZ4A2NfcADA=\", false, function () {\n  return [useLocation];\n});\n_c3 = CalendarForm;\nexport default CalendarForm;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"MeetingInfo\");\n$RefreshReg$(_c2, \"RowContainer\");\n$RefreshReg$(_c3, \"CalendarForm\");","map":{"version":3,"names":["React","useState","useMemo","useLocation","styled","Container","Calendar","TimeSlotList","ClickedSlotList","jsxDEV","_jsxDEV","MeetingInfo","div","_c","RowContainer","_c2","CalendarForm","_s","location","state","selectedDay","setSelectedDay","Date","meetingDateList","setMeetingDateList","handleClickDay","day","isSameDateAndTime","date1","date2","getTime","renderTimeList","meetList","runningTime","numSlots","SlotList","i","d","setMinutes","getMinutes","isContain","some","meetDate","push","time","isPossible","timeList","title","children","fileName","_jsxFileName","lineNumber","columnNumber","meet_name","numJoiner","onChange","_c3","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/routes/CalendarForm.jsx"],"sourcesContent":["import React, { useState, useMemo } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport Container from \"../components/Container\";\nimport Calendar from 'react-calendar';\nimport TimeSlotList from \"../components/TimeSlotList\";\nimport ClickedSlotList from \"../components/ClickedSlotList\";\n\nconst MeetingInfo = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex-shrink: 1;\n  height: 120px;\n`\nconst RowContainer = styled.div`\n  display: flex;\n  height: 300px;\n`\n\nconst CalendarForm = () => {\n  const location = useLocation();\n  const state = location.state; // state = {meet_name: ~ , ...}\n\n  const [selectedDay, setSelectedDay] = useState(new Date()); // 현재 클릭한 날짜 (Date 객체)\n  const [meetingDateList, setMeetingDateList] = useState([]); // 현재까지 저장된 미팅 가능 날짜 객체들\n\n  const handleClickDay = (day) => {\n    setSelectedDay(day);\n  }\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  }\n  const renderTimeList = (day, meetList) => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const runningTime = state.runningTime;\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      let isContain = meetList.some(meetDate => (isSameDateAndTime(new Date(meetDate), d)));\n      if (isContain) {\n        SlotList.push({time:d, isPossible: true});\n      } else {\n        SlotList.push({time:d, isPossible: false});\n      }\n    }\n    return SlotList;\n  }\n\n  const timeList = useMemo(()=>renderTimeList(selectedDay, meetingDateList), [selectedDay, meetingDateList]);\n  // timeList => {time, isPossible}의 List\n\n  return (\n  <Container title='미팅 가능 날짜 선택'>\n    <MeetingInfo>\n      <p>미팅 정보</p>\n      <p>미팅 이름: {state.meet_name}</p>\n      <p>참여 인원: {state.numJoiner}</p>\n      <p>미팅 시간: {state.runningTime}분</p>\n    </MeetingInfo>\n    <RowContainer>\n      <Calendar onChange={handleClickDay}/>\n      <ClickedSlotList meetingDateList = {meetingDateList} />\n    </RowContainer>\n    <p>가능한 시간을 선택해주세요!</p>\n    <TimeSlotList timeList={timeList} meetingDateList={meetingDateList} setMeetingDateList={setMeetingDateList} />\n  </Container>\n  );\n};\n\nexport default CalendarForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}