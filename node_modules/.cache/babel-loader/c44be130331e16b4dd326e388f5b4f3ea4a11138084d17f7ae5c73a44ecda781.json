{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/routes/CalendarForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport Calendar from 'react-calendar';\nimport SelectTime from \"../components/SelectTime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarForm = () => {\n  _s();\n  const location = useLocation();\n  const state = location.state; // state = {meet_name: ~ , ...}\n\n  // const [selectedDay, setSelectedDay] = useState(new Date()); // 현재 클릭한 날짜 (Date 객체)\n  // const [meetingDateList, setMeetingDateList] = useState([]); // 현재까지 저장된 미팅 가능 날짜 객체들\n  // const [timeList, setTimeList] = useState([]); // 현재 클릭한 날짜의 클릭 가능한 timeList (Date List)\n\n  // const handleClickDay = (day) => {\n  //   setSelectedDay(day);\n  // }\n\n  // const renderSelectTime = (day) => {\n  //   // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n  //   const runningTime = state.runningTime;\n  //   console.log(runningTime);\n  // }\n\n  // useEffect(()=>{\n  //   renderSelectTime(selectedDay);\n  // },[selectedDay]);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    title: \"\\uBBF8\\uD305 \\uAC00\\uB2A5 \\uB0A0\\uC9DC \\uC120\\uD0DD\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBBF8\\uD305 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBBF8\\uD305 \\uC774\\uB984: \", state.meet_name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uCC38\\uC5EC \\uC778\\uC6D0: \", state.numJoiner]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\uBBF8\\uD305 \\uC2DC\\uAC04: \", state.runningTime, \"\\uBD84\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 3\n  }, this);\n};\n_s(CalendarForm, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n_c = CalendarForm;\nexport default CalendarForm;\nvar _c;\n$RefreshReg$(_c, \"CalendarForm\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","Container","Calendar","SelectTime","jsxDEV","_jsxDEV","CalendarForm","_s","location","state","title","children","fileName","_jsxFileName","lineNumber","columnNumber","meet_name","numJoiner","runningTime","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/routes/CalendarForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport Container from \"../components/Container\";\nimport Calendar from 'react-calendar';\nimport SelectTime from \"../components/SelectTime\";\n\nconst CalendarForm = () => {\n  const location = useLocation();\n  const state = location.state; // state = {meet_name: ~ , ...}\n\n  // const [selectedDay, setSelectedDay] = useState(new Date()); // 현재 클릭한 날짜 (Date 객체)\n  // const [meetingDateList, setMeetingDateList] = useState([]); // 현재까지 저장된 미팅 가능 날짜 객체들\n  // const [timeList, setTimeList] = useState([]); // 현재 클릭한 날짜의 클릭 가능한 timeList (Date List)\n\n  // const handleClickDay = (day) => {\n  //   setSelectedDay(day);\n  // }\n\n  // const renderSelectTime = (day) => {\n  //   // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n  //   const runningTime = state.runningTime;\n  //   console.log(runningTime);\n  // }\n  \n  // useEffect(()=>{\n  //   renderSelectTime(selectedDay);\n  // },[selectedDay]);\n\n  return (\n  <Container title='미팅 가능 날짜 선택'>\n    <div>\n      <p>미팅 정보</p>\n      <div>\n        <p>미팅 이름: {state.meet_name}</p>\n        <p>참여 인원: {state.numJoiner}</p>\n        <p>미팅 시간: {state.runningTime}분</p>\n      </div>\n    </div>\n    {/* <Calendar /> */}\n    {/*  onChange={handleClickDay} */}\n    {/* <SelectTime /> */}\n    {/* timeList={timeList} */}\n  </Container>\n  );\n};\n\nexport default CalendarForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,OAAOC,UAAU,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAMC,QAAQ,GAAGR,WAAW,CAAC,CAAC;EAC9B,MAAMS,KAAK,GAAGD,QAAQ,CAACC,KAAK,CAAC,CAAC;;EAE9B;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA,oBACAJ,OAAA,CAACJ,SAAS;IAACS,KAAK,EAAC,qDAAa;IAAAC,QAAA,eAC5BN,OAAA;MAAAM,QAAA,gBACEN,OAAA;QAAAM,QAAA,EAAG;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACZV,OAAA;QAAAM,QAAA,gBACEN,OAAA;UAAAM,QAAA,GAAG,6BAAO,EAACF,KAAK,CAACO,SAAS;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BV,OAAA;UAAAM,QAAA,GAAG,6BAAO,EAACF,KAAK,CAACQ,SAAS;QAAA;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC/BV,OAAA;UAAAM,QAAA,GAAG,6BAAO,EAACF,KAAK,CAACS,WAAW,EAAC,QAAC;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAKG,CAAC;AAEd,CAAC;AAACR,EAAA,CAtCID,YAAY;EAAA,QACCN,WAAW;AAAA;AAAAmB,EAAA,GADxBb,YAAY;AAwClB,eAAeA,YAAY;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}