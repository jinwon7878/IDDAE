{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClickedSlotList = ({\n  meetingDateList\n}) => {\n  const renderClickedList = meetingList => {\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let datesPerMonth = [];\n    let prevMonth = -1;\n    for (let i = 0; i < meetingList.length(); i++) {\n      const date = meetingList[i];\n      let month = date.getMonth();\n      if (month != prevMonth) {\n        returnList.push({\n          prevMonth: datesPerMonth\n        });\n        datesPerMonth = [];\n        prevMonth = month;\n      } else {\n        datesPerMonth.push(date);\n      }\n      if (i === meetingList.length() - 1) {\n        returnList.push({\n          prevMonth: datesPerMonth\n        });\n      }\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    return returnList.map(monthAndDates => {\n      for (const [m, ds] of Object.entries(monthAndDates)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: m\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ds.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: d\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), \"\\xDF\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: () => renderClickedList(meetingDateList)\n  }, void 0, false);\n};\n_c = ClickedSlotList;\nexport default ClickedSlotList;\nvar _c;\n$RefreshReg$(_c, \"ClickedSlotList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ClickedSlotList","meetingDateList","renderClickedList","meetingList","returnList","datesPerMonth","prevMonth","i","length","date","month","getMonth","push","splice","map","monthAndDates","m","ds","Object","entries","children","fileName","_jsxFileName","lineNumber","columnNumber","d","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx"],"sourcesContent":["import React from \"react\";\n\nconst ClickedSlotList = ({ meetingDateList }) => {\n  const renderClickedList = (meetingList) => {\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let datesPerMonth = [];\n    let prevMonth = -1;\n    for (let i = 0; i < meetingList.length(); i++) {\n      const date = meetingList[i];\n      let month = date.getMonth();\n      if (month != prevMonth) {\n        returnList.push({ prevMonth: datesPerMonth });\n        datesPerMonth = [];\n        prevMonth = month;\n      } else {\n        datesPerMonth.push(date);\n      }\n      if (i === meetingList.length() - 1) {\n        returnList.push({ prevMonth: datesPerMonth });\n      }\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    return returnList.map((monthAndDates) => {\n      for (const [m, ds] of Object.entries(monthAndDates)) {\n        return (\n          <div>\n            <p>{m}</p>\n            <div>\n              {ds.map((d) => (\n                <p>{d}</p>\n              ))}\n            </div>ß\n          </div>\n        );\n      }\n    });\n  };\n  return <>{() => renderClickedList(meetingDateList)}</>;\n};\n\nexport default ClickedSlotList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAC/C,MAAMC,iBAAiB,GAAIC,WAAW,IAAK;IACzC,IAAIC,UAAU,GAAG,EAAE,CAAC,CAAC;IACrB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,WAAW,CAACK,MAAM,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;MAC7C,MAAME,IAAI,GAAGN,WAAW,CAACI,CAAC,CAAC;MAC3B,IAAIG,KAAK,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC;MAC3B,IAAID,KAAK,IAAIJ,SAAS,EAAE;QACtBF,UAAU,CAACQ,IAAI,CAAC;UAAEN,SAAS,EAAED;QAAc,CAAC,CAAC;QAC7CA,aAAa,GAAG,EAAE;QAClBC,SAAS,GAAGI,KAAK;MACnB,CAAC,MAAM;QACLL,aAAa,CAACO,IAAI,CAACH,IAAI,CAAC;MAC1B;MACA,IAAIF,CAAC,KAAKJ,WAAW,CAACK,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE;QAClCJ,UAAU,CAACQ,IAAI,CAAC;UAAEN,SAAS,EAAED;QAAc,CAAC,CAAC;MAC/C;IACF;IACAD,UAAU,CAACS,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzB,OAAOT,UAAU,CAACU,GAAG,CAAEC,aAAa,IAAK;MACvC,KAAK,MAAM,CAACC,CAAC,EAAEC,EAAE,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,aAAa,CAAC,EAAE;QACnD,oBACElB,OAAA;UAAAuB,QAAA,gBACEvB,OAAA;YAAAuB,QAAA,EAAIJ;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACV3B,OAAA;YAAAuB,QAAA,EACGH,EAAE,CAACH,GAAG,CAAEW,CAAC,iBACR5B,OAAA;cAAAuB,QAAA,EAAIK;YAAC;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CACV;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,QACR;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAEV;IACF,CAAC,CAAC;EACJ,CAAC;EACD,oBAAO3B,OAAA,CAAAE,SAAA;IAAAqB,QAAA,EAAGA,CAAA,KAAMlB,iBAAiB,CAACD,eAAe;EAAC,gBAAG,CAAC;AACxD,CAAC;AAACyB,EAAA,GApCI1B,eAAe;AAsCrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}