{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClickedSlots = styled.div`\n  display: flex;\n  flex-direction: column;\n  line-height: 0;\n`;\n_c = ClickedSlots;\nconst ClickedSlotList = ({\n  meetingDateList\n}) => {\n  const isSameDay = (date1, date2) => {\n    return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n  };\n  const getMD = value => {\n    return `${value.getMonth() + 1}/${value.getDate()}`;\n  };\n  const renderClickedList = meetingList => {\n    const meetList = [...meetingList];\n    console.log(\"meetList: \", meetList);\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let timesPerDate = [];\n    let prevDate = new Date(\"1995-12-17T03:24:00\");\n    for (let i = 0; i < meetList.length; i++) {\n      const date = meetList[i];\n      if (!isSameDay(prevDate, date)) {\n        returnList.push({\n          [getMD(prevDate)]: timesPerDate\n        });\n        timesPerDate = [date];\n        prevDate = date;\n      } else {\n        timesPerDate.push(date);\n      }\n      if (i === meetList.length - 1) {\n        prevDate = date;\n      }\n    }\n    if (timesPerDate.length !== 0) {\n      returnList.push({\n        [getMD(prevDate)]: timesPerDate\n      });\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    console.log(returnList);\n    return returnList;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderClickedList(meetingDateList).map((obj, i) => {\n      for (const [d, times] of Object.entries(obj)) {\n        return /*#__PURE__*/_jsxDEV(ClickedSlots, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: d\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: times.map((time, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [time.getHours().toString(), \" :\", \" \", time.getMinutes().toString().padStart(2, \"0\")]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this);\n      }\n    })\n  }, void 0, false);\n};\n_c2 = ClickedSlotList;\nexport default ClickedSlotList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickedSlots\");\n$RefreshReg$(_c2, \"ClickedSlotList\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","ClickedSlots","div","_c","ClickedSlotList","meetingDateList","isSameDay","date1","date2","getFullYear","getMonth","getDate","getMD","value","renderClickedList","meetingList","meetList","console","log","returnList","timesPerDate","prevDate","Date","i","length","date","push","splice","children","map","obj","d","times","Object","entries","fileName","_jsxFileName","lineNumber","columnNumber","time","index","getHours","toString","getMinutes","padStart","_c2","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ClickedSlots = styled.div`\n  display: flex;\n  flex-direction: column;\n  line-height: 0;\n`;\n\nconst ClickedSlotList = ({ meetingDateList }) => {\n  const isSameDay = (date1, date2) => {\n    return (\n      date1.getFullYear() === date2.getFullYear() &&\n      date1.getMonth() === date2.getMonth() &&\n      date1.getDate() === date2.getDate()\n    );\n  };\n  const getMD = (value) => {\n    return `${value.getMonth() + 1}/${value.getDate()}`;\n  };\n  const renderClickedList = (meetingList) => {\n    const meetList = [...meetingList];\n    console.log(\"meetList: \", meetList);\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let timesPerDate = [];\n    let prevDate = new Date(\"1995-12-17T03:24:00\");\n    for (let i = 0; i < meetList.length; i++) {\n      const date = meetList[i];\n      if (!isSameDay(prevDate, date)) {\n        returnList.push({ [getMD(prevDate)]: timesPerDate });\n        timesPerDate = [date];\n        prevDate = date;\n      } else {\n        timesPerDate.push(date);\n      }\n      if (i === meetList.length - 1) {\n        prevDate = date;\n      }\n    }\n    if (timesPerDate.length !== 0) {\n      returnList.push({ [getMD(prevDate)]: timesPerDate });\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    console.log(returnList);\n    return returnList;\n  };\n\n  return (\n    <>\n      {renderClickedList(meetingDateList).map((obj, i) => {\n        for (const [d, times] of Object.entries(obj)) {\n          return (\n            <ClickedSlots key={i}>\n              <p>{d}</p>\n              <div>\n                {times.map((time, index) => (\n                  <p key={index}>\n                    {time.getHours().toString()} :{\" \"}\n                    {time.getMinutes().toString().padStart(2, \"0\")}\n                  </p>\n                ))}\n              </div>\n            </ClickedSlots>\n          );\n        }\n      })}\n    </>\n  );\n};\n\nexport default ClickedSlotList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}