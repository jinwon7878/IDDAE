{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClickedSlotList = ({\n  meetingDateList\n}) => {\n  const renderClickedList = meetingList => {\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let datesPerMonth = [];\n    let prevMonth = -1;\n    for (let i = 0; i < meetingList.length(); i++) {\n      const date = meetingList[i];\n      let month = date.getMonth();\n      if (month != prevMonth) {\n        returnList.push({\n          prevMonth: datesPerMonth\n        });\n        datesPerMonth = [];\n        prevMonth = month;\n      } else {\n        datesPerMonth.push(date);\n      }\n      if (i === meetingList.length() - 1) {\n        returnList.push({\n          prevMonth: datesPerMonth\n        });\n      }\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    return returnList;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: () => {\n      renderClickedList(meetingDateList).map(monthAndDates => {\n        for (const [m, ds] of Object.entries(monthAndDates)) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: m.toString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: ds.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n                children: d.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this);\n        }\n      });\n    }\n  }, void 0, false);\n};\n_c = ClickedSlotList;\nexport default ClickedSlotList;\nvar _c;\n$RefreshReg$(_c, \"ClickedSlotList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ClickedSlotList","meetingDateList","renderClickedList","meetingList","returnList","datesPerMonth","prevMonth","i","length","date","month","getMonth","push","splice","children","map","monthAndDates","m","ds","Object","entries","toString","fileName","_jsxFileName","lineNumber","columnNumber","d","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx"],"sourcesContent":["import React from \"react\";\n\nconst ClickedSlotList = ({ meetingDateList }) => {\n  const renderClickedList = (meetingList) => {\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let datesPerMonth = [];\n    let prevMonth = -1;\n    for (let i = 0; i < meetingList.length(); i++) {\n      const date = meetingList[i];\n      let month = date.getMonth();\n      if (month != prevMonth) {\n        returnList.push({ prevMonth: datesPerMonth });\n        datesPerMonth = [];\n        prevMonth = month;\n      } else {\n        datesPerMonth.push(date);\n      }\n      if (i === meetingList.length() - 1) {\n        returnList.push({ prevMonth: datesPerMonth });\n      }\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    return returnList;\n  };\n\n  return <>{() => {\n    renderClickedList(meetingDateList).map((monthAndDates)=>{\n        for (const [m, ds] of Object.entries(monthAndDates)) {\n            return (\n              <div>\n                <p>{m.toString()}</p>\n                <div>\n                  {ds.map((d) => (\n                    <p>{d.toString()}</p>\n                  ))}\n                </div>\n              </div>\n            );\n            }\n    })\n    }}</>;\n};\n\nexport default ClickedSlotList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAC/C,MAAMC,iBAAiB,GAAIC,WAAW,IAAK;IACzC,IAAIC,UAAU,GAAG,EAAE,CAAC,CAAC;IACrB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,WAAW,CAACK,MAAM,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;MAC7C,MAAME,IAAI,GAAGN,WAAW,CAACI,CAAC,CAAC;MAC3B,IAAIG,KAAK,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC;MAC3B,IAAID,KAAK,IAAIJ,SAAS,EAAE;QACtBF,UAAU,CAACQ,IAAI,CAAC;UAAEN,SAAS,EAAED;QAAc,CAAC,CAAC;QAC7CA,aAAa,GAAG,EAAE;QAClBC,SAAS,GAAGI,KAAK;MACnB,CAAC,MAAM;QACLL,aAAa,CAACO,IAAI,CAACH,IAAI,CAAC;MAC1B;MACA,IAAIF,CAAC,KAAKJ,WAAW,CAACK,MAAM,CAAC,CAAC,GAAG,CAAC,EAAE;QAClCJ,UAAU,CAACQ,IAAI,CAAC;UAAEN,SAAS,EAAED;QAAc,CAAC,CAAC;MAC/C;IACF;IACAD,UAAU,CAACS,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzB,OAAOT,UAAU;EACnB,CAAC;EAED,oBAAOP,OAAA,CAAAE,SAAA;IAAAe,QAAA,EAAGA,CAAA,KAAM;MACdZ,iBAAiB,CAACD,eAAe,CAAC,CAACc,GAAG,CAAEC,aAAa,IAAG;QACpD,KAAK,MAAM,CAACC,CAAC,EAAEC,EAAE,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,aAAa,CAAC,EAAE;UACjD,oBACEnB,OAAA;YAAAiB,QAAA,gBACEjB,OAAA;cAAAiB,QAAA,EAAIG,CAAC,CAACI,QAAQ,CAAC;YAAC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrB5B,OAAA;cAAAiB,QAAA,EACGI,EAAE,CAACH,GAAG,CAAEW,CAAC,iBACR7B,OAAA;gBAAAiB,QAAA,EAAIY,CAAC,CAACL,QAAQ,CAAC;cAAC;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CACrB;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC;QAER;MACR,CAAC,CAAC;IACF;EAAC,gBAAG,CAAC;AACT,CAAC;AAACE,EAAA,GAvCI3B,eAAe;AAyCrB,eAAeA,eAAe;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}