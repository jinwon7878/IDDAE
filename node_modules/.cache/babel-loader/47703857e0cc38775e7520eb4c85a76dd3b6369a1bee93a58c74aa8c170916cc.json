{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/TimeSlotList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport TimeSlot from \"./TimeSlot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimeSlotList = ({\n  timeList,\n  meetingDateList,\n  setMeetingDateList\n}) => {\n  _s();\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  };\n  const handleClickPossible = e => {\n    const date = e.target.time; // new Date(e.target.time)\n    const copyMeetingList = [...meetingDateList];\n  };\n  const handleClickSlot = e => {\n    const date = e.target.value; // new Date(e.target.time)\n    const isPos = e.target.dataset.ispossible;\n    console.log('click! before MeetingList : ', meetingDateList);\n    if (isPos) {\n      setMeetingDateList(prev => {\n        const meetList = [...prev];\n        for (let i = 0; i < meetList.length; i++) {\n          if (isSameDateAndTime(meetList[i].time, date)) {\n            const newMeetList = meetList.splice(i, 1);\n            return newMeetList;\n          }\n        }\n      });\n    } else {\n      setMeetingDateList(prev => [date, ...prev].sort());\n    }\n  };\n  useEffect(() => console.log(meetingDateList));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: timeList.map((slot, index) => /*#__PURE__*/_jsxDEV(TimeSlot, {\n      onClick: handleClickSlot,\n      time: slot.time,\n      isPossible: slot.isPossible\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 39\n    }, this))\n  }, void 0, false);\n};\n_s(TimeSlotList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = TimeSlotList;\nexport default TimeSlotList;\nvar _c;\n$RefreshReg$(_c, \"TimeSlotList\");","map":{"version":3,"names":["React","useEffect","TimeSlot","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeSlotList","timeList","meetingDateList","setMeetingDateList","_s","isSameDateAndTime","date1","date2","getTime","handleClickPossible","e","date","target","time","copyMeetingList","handleClickSlot","value","isPos","dataset","ispossible","console","log","prev","meetList","i","length","newMeetList","splice","sort","children","map","slot","index","onClick","isPossible","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/TimeSlotList.jsx"],"sourcesContent":["import React, { useEffect } from \"react\";\nimport TimeSlot from \"./TimeSlot\";\n\nconst TimeSlotList = ({ timeList, meetingDateList, setMeetingDateList }) => {\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  }\n  const handleClickPossible = (e) => {\n    const date = e.target.time; // new Date(e.target.time)\n    const copyMeetingList = [...meetingDateList];\n    \n  };\n  const handleClickSlot = (e) => {\n    const date = e.target.value; // new Date(e.target.time)\n    const isPos = e.target.dataset.ispossible;\n    console.log('click! before MeetingList : ', meetingDateList);\n    if (isPos) {\n      setMeetingDateList((prev) => {\n        const meetList = [...prev]\n        for(let i = 0; i < meetList.length; i++) {\n          if(isSameDateAndTime(meetList[i].time, date)) {\n            const newMeetList = meetList.splice(i, 1);\n            return newMeetList;\n          }\n        }\n      });\n    } else {setMeetingDateList((prev) => [date, ...prev].sort());}\n  };\n  useEffect(()=>console.log(meetingDateList))\n\n  return (\n    <>\n      {timeList.map((slot, index) => (<TimeSlot onClick={handleClickSlot} key={index} time={slot.time} isPossible={slot.isPossible} />))}\n    </>\n  );\n};\n\nexport default TimeSlotList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAmB,CAAC,KAAK;EAAAC,EAAA;EAC1E,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,OAAOD,KAAK,CAACE,OAAO,CAAC,CAAC,KAAKD,KAAK,CAACC,OAAO,CAAC,CAAC;EAC5C,CAAC;EACD,MAAMC,mBAAmB,GAAIC,CAAC,IAAK;IACjC,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,IAAI,CAAC,CAAC;IAC5B,MAAMC,eAAe,GAAG,CAAC,GAAGZ,eAAe,CAAC;EAE9C,CAAC;EACD,MAAMa,eAAe,GAAIL,CAAC,IAAK;IAC7B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACI,KAAK,CAAC,CAAC;IAC7B,MAAMC,KAAK,GAAGP,CAAC,CAACE,MAAM,CAACM,OAAO,CAACC,UAAU;IACzCC,OAAO,CAACC,GAAG,CAAC,8BAA8B,EAAEnB,eAAe,CAAC;IAC5D,IAAIe,KAAK,EAAE;MACTd,kBAAkB,CAAEmB,IAAI,IAAK;QAC3B,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAAC;QAC1B,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UACvC,IAAGnB,iBAAiB,CAACkB,QAAQ,CAACC,CAAC,CAAC,CAACX,IAAI,EAAEF,IAAI,CAAC,EAAE;YAC5C,MAAMe,WAAW,GAAGH,QAAQ,CAACI,MAAM,CAACH,CAAC,EAAE,CAAC,CAAC;YACzC,OAAOE,WAAW;UACpB;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MAACvB,kBAAkB,CAAEmB,IAAI,IAAK,CAACX,IAAI,EAAE,GAAGW,IAAI,CAAC,CAACM,IAAI,CAAC,CAAC,CAAC;IAAC;EAC/D,CAAC;EACDlC,SAAS,CAAC,MAAI0B,OAAO,CAACC,GAAG,CAACnB,eAAe,CAAC,CAAC;EAE3C,oBACEL,OAAA,CAAAE,SAAA;IAAA8B,QAAA,EACG5B,QAAQ,CAAC6B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAMnC,OAAA,CAACF,QAAQ;MAACsC,OAAO,EAAElB,eAAgB;MAAaF,IAAI,EAAEkB,IAAI,CAAClB,IAAK;MAACqB,UAAU,EAAEH,IAAI,CAACG;IAAW,GAApDF,KAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAiD,CAAE;EAAC,gBAClI,CAAC;AAEP,CAAC;AAAClC,EAAA,CAhCIJ,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAkClB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}