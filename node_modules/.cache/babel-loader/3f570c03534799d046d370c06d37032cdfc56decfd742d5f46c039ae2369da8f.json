{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/TimeSlotList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useLayoutEffect } from \"react\";\nimport { PossibleSlot, ImpossibleSlot } from \"./TimeSlot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimeSlotList = ({\n  timeList,\n  setTimeList,\n  meetingDateList,\n  setMeetingDateList\n}) => {\n  _s();\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  };\n  const handleClickPossible = e => {\n    const date = e.target.time; // new Date(e.target.time)\n    const copyMeetingList = [...meetingDateList];\n    for (let i = 0; i < copyMeetingList.length; i++) {\n      if (isSameDateAndTime(copyMeetingList[i].time, date)) {\n        const meetList = copyMeetingList.splice(i, 1);\n        setMeetingDateList(meetList);\n        return;\n      }\n    }\n  };\n  const handleClickImpossible = e => {\n    const date = e.target.value; // new Date(e.target.time)\n    setMeetingDateList(prev => [date, ...prev].sort());\n    // return;\n  };\n\n  useEffect(() => console.log(meetingDateList));\n  const renderTimeList = (day, meetList) => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const runningTime = state.runningTime;\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      if (meetList.includes(d)) {\n        SlotList.push({\n          index: i,\n          time: d,\n          isPossible: true\n        });\n      } else {\n        SlotList.push({\n          index: i,\n          time: d,\n          isPossible: false\n        });\n      }\n    }\n    setTimeList(SlotList);\n  };\n  useLayoutEffect(() => {\n    renderTimeList(selectedDay, meetingDateList);\n  }, [selectedDay, meetingDateList]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: timeList.map((slot, index) => {\n      if (slot.isPossible) {\n        return /*#__PURE__*/_jsxDEV(PossibleSlot, {\n          onClick: handleClickPossible,\n          time: slot.time,\n          isPossible: slot.isPossible\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(ImpossibleSlot, {\n          onClick: handleClickImpossible,\n          time: slot.time,\n          isPossible: slot.isPossible\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this);\n      }\n    })\n  }, void 0, false);\n};\n_s(TimeSlotList, \"MfQzVb+S69pSHKMDKIsojbuzFrw=\");\n_c = TimeSlotList;\nexport default TimeSlotList;\nvar _c;\n$RefreshReg$(_c, \"TimeSlotList\");","map":{"version":3,"names":["React","useEffect","useLayoutEffect","PossibleSlot","ImpossibleSlot","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeSlotList","timeList","setTimeList","meetingDateList","setMeetingDateList","_s","isSameDateAndTime","date1","date2","getTime","handleClickPossible","e","date","target","time","copyMeetingList","i","length","meetList","splice","handleClickImpossible","value","prev","sort","console","log","renderTimeList","day","runningTime","state","numSlots","SlotList","d","Date","setMinutes","getMinutes","includes","push","index","isPossible","selectedDay","children","map","slot","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/TimeSlotList.jsx"],"sourcesContent":["import React, { useEffect, useLayoutEffect } from \"react\";\nimport {PossibleSlot, ImpossibleSlot} from \"./TimeSlot\";\n\nconst TimeSlotList = ({ timeList, setTimeList, meetingDateList, setMeetingDateList }) => {\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  }\n  const handleClickPossible = (e) => {\n    const date = e.target.time; // new Date(e.target.time)\n    const copyMeetingList = [...meetingDateList];\n    for(let i = 0; i < copyMeetingList.length; i++) {\n      if(isSameDateAndTime(copyMeetingList[i].time, date)) {\n        const meetList = copyMeetingList.splice(i, 1);\n        setMeetingDateList(meetList);\n        return;\n      }\n    }\n  };\n  const handleClickImpossible = (e) => {\n    const date = e.target.value; // new Date(e.target.time)\n    setMeetingDateList((prev) => [date, ...prev].sort());\n    // return;\n  };\n  useEffect(()=>console.log(meetingDateList))\n\n  const renderTimeList = (day, meetList) => {\n    // meetingDateList의 요소들 중, day와 일수가 같은 date object들의 list 반환 -> timeList\n    const runningTime = state.runningTime;\n    const numSlots = 960 / runningTime;\n    let SlotList = [];\n    for (let i = 0; i < numSlots; i++) {\n      let d = new Date(day);\n      d.setMinutes(d.getMinutes() + 360 + runningTime * i);\n      if (meetList.includes(d)) {\n        SlotList.push({index:i, time:d, isPossible: true});\n      } else {\n        SlotList.push({index:i, time:d, isPossible: false});\n      }\n    }\n    setTimeList(SlotList);\n  }\n\n  useLayoutEffect(()=>{\n    renderTimeList(selectedDay, meetingDateList);\n  }, [selectedDay, meetingDateList])\n\n  return (\n    <>\n      {timeList.map((slot, index) => {\n        if (slot.isPossible) {\n          return <PossibleSlot onClick={handleClickPossible} key={index} time={slot.time} isPossible={slot.isPossible} />;\n        } else { return <ImpossibleSlot onClick={handleClickImpossible} key={index} time={slot.time} isPossible={slot.isPossible} />; }\n      })}\n    </>\n  );\n};\n\nexport default TimeSlotList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}