{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ClickedSlots = styled.div`\n    display: flex;\n    flex-direction: column;\n    line-height: 0;\n`;\n_c = ClickedSlots;\nconst ClickedSlotList = ({\n  meetingDateList\n}) => {\n  const isSameDay = (date1, date2) => {\n    return date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate();\n  };\n  const getMD = value => {\n    return `${value.getMonth() + 1}/${value.getDate()}`;\n  };\n  const renderClickedList = meetingList => {\n    const meetList = [...meetingList];\n    meetList.sort();\n    console.log('meetList: ', meetList);\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let timesPerDate = [];\n    let prevDate = new Date('1995-12-17T03:24:00');\n    for (let i = 0; i < meetList.length; i++) {\n      const date = meetList[i];\n      if (!isSameDay(prevDate, date)) {\n        returnList.push({\n          [getMD(prevDate)]: timesPerDate\n        });\n        timesPerDate = [date];\n        prevDate = date;\n      } else {\n        timesPerDate.push(date);\n      }\n      if (i === meetList.length - 1) {\n        prevDate = date;\n      }\n    }\n    if (timesPerDate.length !== 0) {\n      returnList.push({\n        [getMD(prevDate)]: timesPerDate\n      });\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    console.log(returnList);\n    return returnList;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: renderClickedList(meetingDateList).map(obj => {\n      for (const [d, times] of Object.entries(obj)) {\n        return /*#__PURE__*/_jsxDEV(ClickedSlots, {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: d\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: times.map(time => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [time.getHours().toString(), \" : \", time.getMinutes().toString().padStart(2, '0')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this);\n      }\n    })\n  }, void 0, false);\n};\n_c2 = ClickedSlotList;\nexport default ClickedSlotList;\nvar _c, _c2;\n$RefreshReg$(_c, \"ClickedSlots\");\n$RefreshReg$(_c2, \"ClickedSlotList\");","map":{"version":3,"names":["React","styled","jsxDEV","_jsxDEV","Fragment","_Fragment","ClickedSlots","div","_c","ClickedSlotList","meetingDateList","isSameDay","date1","date2","getFullYear","getMonth","getDate","getMD","value","renderClickedList","meetingList","meetList","sort","console","log","returnList","timesPerDate","prevDate","Date","i","length","date","push","splice","children","map","obj","d","times","Object","entries","fileName","_jsxFileName","lineNumber","columnNumber","time","getHours","toString","getMinutes","padStart","_c2","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ClickedSlots = styled.div`\n    display: flex;\n    flex-direction: column;\n    line-height: 0;\n`\n\nconst ClickedSlotList = ({ meetingDateList }) => {\n    const isSameDay = (date1, date2) => {\n        return date1.getFullYear() === date2.getFullYear() &&\n          date1.getMonth() === date2.getMonth() &&\n          date1.getDate()=== date2.getDate();\n      }\n    const getMD = (value) => {\n        return `${value.getMonth()+1}/${value.getDate()}`;\n    }\n  const renderClickedList = (meetingList) => {\n    const meetList = [...meetingList];\n    meetList.sort();\n    console.log('meetList: ', meetList);\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let timesPerDate = [];\n    let prevDate = new Date('1995-12-17T03:24:00');\n    for (let i = 0; i < meetList.length; i++) {\n      const date = meetList[i];\n      if (!isSameDay(prevDate, date)) {\n        returnList.push({ [getMD(prevDate)]: timesPerDate });\n        timesPerDate = [date];\n        prevDate = date;\n      } else {\n        timesPerDate.push(date);\n      }\n      if (i === meetList.length - 1) {prevDate = date;}\n    }\n    if (timesPerDate.length !== 0) {returnList.push({ [getMD(prevDate)]: timesPerDate });}\n    returnList.splice(0, 1); // remove {-1: []}\n    console.log(returnList);\n    return returnList;\n  };\n\n  return <>{renderClickedList(meetingDateList).map((obj)=>{\n        for (const [d, times] of Object.entries(obj)) {\n            return (\n              <ClickedSlots>\n                <p>{d}</p>\n                <div>\n                  {times.map((time) => (\n                    <p>{time.getHours().toString()} : {time.getMinutes().toString().padStart(2, '0')}</p>\n                  ))}\n                </div>\n              </ClickedSlots>\n            );\n            }\n        })}</>;\n};\n\nexport default ClickedSlotList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}