{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ClickedSlotList = ({\n  meetingDateList\n}) => {\n  const renderClickedList = meetingList => {\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let datesPerMonth = [];\n    let prevMonth = -1;\n    for (let i = 0; i < meetingList.length(); i++) {\n      const date = meetingList[i];\n      let month = date.getMonth();\n      if (month != prevMonth) {\n        returnList.push({\n          prevMonth: datesPerMonth\n        });\n        datesPerMonth = [];\n        prevMonth = month;\n      } else {\n        datesPerMonth.push(date);\n      }\n      if (i === meetingList.length() - 1) {\n        returnList.push({\n          prevMonth: datesPerMonth\n        });\n      }\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    return returnList.map(monthAndDates => {\n      for (const [m, ds] of Object.entries(monthAndDates)) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: m\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: ds.map(d => /*#__PURE__*/_jsxDEV(\"p\", {\n              children: d\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 32\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: () => renderClickedList(meetingDateList)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 10\n  }, this);\n};\n_c = ClickedSlotList;\nexport default ClickedSlotList;\nvar _c;\n$RefreshReg$(_c, \"ClickedSlotList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ClickedSlotList","meetingDateList","renderClickedList","meetingList","returnList","datesPerMonth","prevMonth","i","length","date","month","getMonth","push","splice","map","monthAndDates","m","ds","Object","entries","children","fileName","_jsxFileName","lineNumber","columnNumber","d","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/ClickedSlotList.jsx"],"sourcesContent":["import React from \"react\";\n\nconst ClickedSlotList = ({ meetingDateList }) => {\n  const renderClickedList = (meetingList) => {\n    let returnList = []; // [{1: [date1, date2, ...]}, {4: [date]}, ...]\n    let datesPerMonth = [];\n    let prevMonth = -1;\n    for (let i=0; i<meetingList.length(); i++) {\n        const date = meetingList[i];\n        let month = date.getMonth();\n        if (month != prevMonth) {\n            returnList.push({prevMonth: datesPerMonth});\n            datesPerMonth = [];\n            prevMonth = month;\n        } else {datesPerMonth.push(date);}\n        if (i===meetingList.length()-1){returnList.push({prevMonth: datesPerMonth});}\n    }\n    returnList.splice(0, 1); // remove {-1: []}\n    return returnList.map((monthAndDates)=>{\n        for (const [m, ds] of Object.entries(monthAndDates)) {\n            return (\n            <div>\n                <p>{m}</p>\n                <div>\n                    {ds.map(d=><p>{d}</p>)}\n                </div>\n            </div>\n            );\n        }\n    })\n  };\n  return <div>{()=>renderClickedList(meetingDateList)}</div>;\n};\n\nexport default ClickedSlotList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAgB,CAAC,KAAK;EAC/C,MAAMC,iBAAiB,GAAIC,WAAW,IAAK;IACzC,IAAIC,UAAU,GAAG,EAAE,CAAC,CAAC;IACrB,IAAIC,aAAa,GAAG,EAAE;IACtB,IAAIC,SAAS,GAAG,CAAC,CAAC;IAClB,KAAK,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAACJ,WAAW,CAACK,MAAM,CAAC,CAAC,EAAED,CAAC,EAAE,EAAE;MACvC,MAAME,IAAI,GAAGN,WAAW,CAACI,CAAC,CAAC;MAC3B,IAAIG,KAAK,GAAGD,IAAI,CAACE,QAAQ,CAAC,CAAC;MAC3B,IAAID,KAAK,IAAIJ,SAAS,EAAE;QACpBF,UAAU,CAACQ,IAAI,CAAC;UAACN,SAAS,EAAED;QAAa,CAAC,CAAC;QAC3CA,aAAa,GAAG,EAAE;QAClBC,SAAS,GAAGI,KAAK;MACrB,CAAC,MAAM;QAACL,aAAa,CAACO,IAAI,CAACH,IAAI,CAAC;MAAC;MACjC,IAAIF,CAAC,KAAGJ,WAAW,CAACK,MAAM,CAAC,CAAC,GAAC,CAAC,EAAC;QAACJ,UAAU,CAACQ,IAAI,CAAC;UAACN,SAAS,EAAED;QAAa,CAAC,CAAC;MAAC;IAChF;IACAD,UAAU,CAACS,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACzB,OAAOT,UAAU,CAACU,GAAG,CAAEC,aAAa,IAAG;MACnC,KAAK,MAAM,CAACC,CAAC,EAAEC,EAAE,CAAC,IAAIC,MAAM,CAACC,OAAO,CAACJ,aAAa,CAAC,EAAE;QACjD,oBACAhB,OAAA;UAAAqB,QAAA,gBACIrB,OAAA;YAAAqB,QAAA,EAAIJ;UAAC;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACVzB,OAAA;YAAAqB,QAAA,EACKH,EAAE,CAACH,GAAG,CAACW,CAAC,iBAAE1B,OAAA;cAAAqB,QAAA,EAAIK;YAAC;cAAAJ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CAAC;MAEV;IACJ,CAAC,CAAC;EACJ,CAAC;EACD,oBAAOzB,OAAA;IAAAqB,QAAA,EAAMA,CAAA,KAAIlB,iBAAiB,CAACD,eAAe;EAAC;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC5D,CAAC;AAACE,EAAA,GA9BI1B,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}