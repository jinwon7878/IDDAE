{"ast":null,"code":"var _jsxFileName = \"/Users/yoonjinwon/Desktop/\\u110B\\u1175\\u1104\\u1162\\u110B\\u1165\\u1104\\u1162/IDDAE-jinwon/final/src/components/TimeSlotList.jsx\";\nimport React from \"react\";\nimport TimeSlot from \"./TimeSlot\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TimeSlotList = ({\n  timeList,\n  meetingDateList,\n  setMeetingDateList\n}) => {\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  };\n  const handleClickSlot = e => {\n    console.log('e.target: ', e.target);\n    const date = new Date(e.target.value); // string => Date object\n    console.log(date, ' is ', e.target.dataset.ispossible);\n    const isPos = JSON.parse(e.target.dataset.ispossible);\n    if (isPos) {\n      setMeetingDateList(prev => {\n        const meetList = [...prev];\n        for (let i = 0; i < meetList.length; i++) {\n          if (isSameDateAndTime(new Date(meetList[i]), date)) {\n            meetList.splice(i, 1);\n            return meetList;\n          }\n        }\n      });\n    } else {\n      setMeetingDateList(prev => {\n        return [date, ...prev].sort();\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: timeList.map((slot, index) => /*#__PURE__*/_jsxDEV(TimeSlot, {\n      onClick: handleClickSlot,\n      time: slot.time,\n      isPossibleTime: slot.isPossible\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 39\n    }, this))\n  }, void 0, false);\n};\n_c = TimeSlotList;\nexport default TimeSlotList;\nvar _c;\n$RefreshReg$(_c, \"TimeSlotList\");","map":{"version":3,"names":["React","TimeSlot","jsxDEV","_jsxDEV","Fragment","_Fragment","TimeSlotList","timeList","meetingDateList","setMeetingDateList","isSameDateAndTime","date1","date2","getTime","handleClickSlot","e","console","log","target","date","Date","value","dataset","ispossible","isPos","JSON","parse","prev","meetList","i","length","splice","sort","children","map","slot","index","onClick","time","isPossibleTime","isPossible","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/yoonjinwon/Desktop/이때어때/IDDAE-jinwon/final/src/components/TimeSlotList.jsx"],"sourcesContent":["import React from \"react\";\nimport TimeSlot from \"./TimeSlot\";\n\nconst TimeSlotList = ({ timeList, meetingDateList, setMeetingDateList }) => {\n  const isSameDateAndTime = (date1, date2) => {\n    return date1.getTime() === date2.getTime();\n  }\n  const handleClickSlot = (e) => {\n    console.log('e.target: ', e.target);\n    const date = new Date(e.target.value); // string => Date object\n    console.log(date, ' is ', e.target.dataset.ispossible);\n    const isPos = JSON.parse(e.target.dataset.ispossible);\n    if (isPos) {\n      setMeetingDateList((prev) => {\n        const meetList = [...prev]\n        for(let i = 0; i < meetList.length; i++) {\n          if(isSameDateAndTime(new Date(meetList[i]), date)) {\n            meetList.splice(i, 1);\n            return meetList;\n          }\n        }\n      });\n    } else {setMeetingDateList((prev) => {\n      return [date, ...prev].sort()\n    })}\n  };\n\n  return (\n    <>\n      {timeList.map((slot, index) => (<TimeSlot onClick={handleClickSlot} key={index} time={slot.time} isPossibleTime={slot.isPossible} />))}\n    </>\n  );\n};\n\nexport default TimeSlotList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,eAAe;EAAEC;AAAmB,CAAC,KAAK;EAC1E,MAAMC,iBAAiB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC1C,OAAOD,KAAK,CAACE,OAAO,CAAC,CAAC,KAAKD,KAAK,CAACC,OAAO,CAAC,CAAC;EAC5C,CAAC;EACD,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC7BC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,CAAC,CAACG,MAAM,CAAC;IACnC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACL,CAAC,CAACG,MAAM,CAACG,KAAK,CAAC,CAAC,CAAC;IACvCL,OAAO,CAACC,GAAG,CAACE,IAAI,EAAE,MAAM,EAAEJ,CAAC,CAACG,MAAM,CAACI,OAAO,CAACC,UAAU,CAAC;IACtD,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACX,CAAC,CAACG,MAAM,CAACI,OAAO,CAACC,UAAU,CAAC;IACrD,IAAIC,KAAK,EAAE;MACTf,kBAAkB,CAAEkB,IAAI,IAAK;QAC3B,MAAMC,QAAQ,GAAG,CAAC,GAAGD,IAAI,CAAC;QAC1B,KAAI,IAAIE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;UACvC,IAAGnB,iBAAiB,CAAC,IAAIU,IAAI,CAACQ,QAAQ,CAACC,CAAC,CAAC,CAAC,EAAEV,IAAI,CAAC,EAAE;YACjDS,QAAQ,CAACG,MAAM,CAACF,CAAC,EAAE,CAAC,CAAC;YACrB,OAAOD,QAAQ;UACjB;QACF;MACF,CAAC,CAAC;IACJ,CAAC,MAAM;MAACnB,kBAAkB,CAAEkB,IAAI,IAAK;QACnC,OAAO,CAACR,IAAI,EAAE,GAAGQ,IAAI,CAAC,CAACK,IAAI,CAAC,CAAC;MAC/B,CAAC,CAAC;IAAA;EACJ,CAAC;EAED,oBACE7B,OAAA,CAAAE,SAAA;IAAA4B,QAAA,EACG1B,QAAQ,CAAC2B,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBAAMjC,OAAA,CAACF,QAAQ;MAACoC,OAAO,EAAEvB,eAAgB;MAAawB,IAAI,EAAEH,IAAI,CAACG,IAAK;MAACC,cAAc,EAAEJ,IAAI,CAACK;IAAW,GAAxDJ,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAqD,CAAE;EAAC,gBACtI,CAAC;AAEP,CAAC;AAACC,EAAA,GA7BIvC,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}